// This is Prisma schema LearningApp by it...//

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        Int                @id @default(autoincrement())
  firstName String
  lastName  String
  password  String
  email     String             @unique
  avatar    String
  role      Role               @default(USER)
  createdAt DateTime           @default(now())
  lessons   BarterLessons[]
  lesson    Lessons[]
  teachers  Teachers[]
  students  Students[]

}

model Teachers {
  id        Int                @id @default(autoincrement())
  user          Users              @relation(fields: [userId], references: [id])
  userId        Int
  lesson     Lessons  @relation(fields: [lessonId], references: [id])
  lessonId   Int
}

model Students {
  id        Int                @id @default(autoincrement())
  user          Users              @relation(fields: [userId], references: [id])
  userId        Int
  lesson     Lessons  @relation(fields: [lessonId], references: [id])
  lessonId   Int
}

model Scores {
  id        Int                @id @default(autoincrement())
  value     Int
  lesson     Lessons  @relation(fields: [lessonId], references: [id])
  lessonId   Int
}



model Lessons {
  id             Int                @id @default(autoincrement())
  name           String             @unique
  content        String
  photo          String?
  video          String?
  createdAt      DateTime           @default(now())
  owner          Users              @relation(fields: [ownerId], references: [id])
  ownerId        Int
  category       Categories         @relation(fields: [categoryId], references: [id])
  categoryId     Int
  localization   Localizations      @relation(fields: [localizationId], references: [id])
  localizationId Int
  users          BarterLessons[]
  teachers       Teachers[]
  students       Students[]
  scores         Scores[]
}

model Categories {
  id     Int       @id @default(autoincrement())
  name   String    @unique
  lesson Lessons[]
}

model Localizations {
  id       Int       @id @default(autoincrement())
  city     String
  street   String
  zip      String
  province String
  lesson   Lessons[]
}

model BarterLessons {
  lesson     Lessons  @relation(fields: [lessonId], references: [id])
  lessonId   Int
  user       Users    @relation(fields: [userId], references: [id])
  userId     Int
  assignedAt DateTime @default(now())
  score      String
  @@id([lessonId, userId])
}

enum Role {
  USER
  ADMIN
}
